/*
* Copyright 2013 Seven Spikes Ltd. All rights reserved. (http://www.nop-templates.com)
* http://www.nop-templates.com/t/licensinginfo
*/

Number.prototype.formatMoney = function(c, d, t){
var n = this, 
    c = isNaN(c = Math.abs(c)) ? 2 : c, 
    d = d == undefined ? "." : d, 
    t = t == undefined ? "," : t, 
    s = n < 0 ? "-" : "", 
    i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "", 
    j = (j = i.length) > 3 ? j % 3 : 0;
   return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
 };

$(document).ready(function () { var a = parseFloat($("#slider").attr("data-sliderMinValue")), b = parseFloat($("#slider").attr("data-sliderMaxValue")), d = $("#slider").attr("data-selectedFromValue"), e = $("#slider").attr("data-selectedToValue"), c = new PriceRangeFilterManager; $("#slider").slider({ min: a, max: b, range: !0, values: [d, e], slide: c.sliderSlide, stop: c.sliderStopped }); a = $(".priceRangeFilterPanel7Spikes .title a.clearPriceRangeFilter"); a.click({ priceRangeFilterManager: c }, c.clearPriceRangeFilter); a.hide() }); function PriceRangeFilterManager() { } PriceRangeFilterManager.prototype.buildPriceRangeFilterModel = buildPriceRangeFilterModel; PriceRangeFilterManager.prototype.SetSliderValues = SetSliderValues; PriceRangeFilterManager.prototype.sliderSlide = sliderSlide; PriceRangeFilterManager.prototype.sliderStopped = sliderStopped; PriceRangeFilterManager.prototype.clearPriceRangeFilter = clearPriceRangeFilter; PriceRangeFilterManager.prototype.clearPriceRangeFilterControl = clearPriceRangeFilterControl; PriceRangeFilterManager.prototype.determineIfPriceRangeHasBeenSelected = determineIfPriceRangeHasBeenSelected; FiltersManager.prototype.buildPriceRangeFilterModel = (new PriceRangeFilterManager).buildPriceRangeFilterModel; FiltersManager.prototype.SetSliderValues = (new PriceRangeFilterManager).SetSliderValues; FiltersManager.prototype.clearPriceRangeFilterControl = (new PriceRangeFilterManager).clearPriceRangeFilterControl; FiltersManager.prototype.determineIfPriceRangeHasBeenSelected = (new PriceRangeFilterManager).determineIfPriceRangeHasBeenSelected; function buildPriceRangeFilterModel(a, b, d) { var e = parseFloat($("#slider").attr("data-sliderMinValue")), c = parseFloat($("#slider").attr("data-sliderMaxValue")), g = PriceRangeFilterManager.sliderSelectedFromValue, h = PriceRangeFilterManager.sliderSelectedToValue, f = {}; f.CategoryId = a; f.ManufacturerId = b; void 0 != d && d.get(0) == $(".priceRangeFilterPanel7Spikes").get(0) && (f.Priority = 1); a = {}; void 0 != g && g != e && (a.From = g.toString()); void 0 != h && h != c && (a.To = h.toString()); f.SelectedPriceRange = a; f.MinPrice = e.toString(); f.MaxPrice = c.toString(); return f } function SetSliderValues(a, b) { var d = parseFloat($("#slider").attr("data-sliderMinValue")), e = parseFloat($("#slider").attr("data-sliderMaxValue")), c = $(".priceRangeFilterPanel7Spikes").attr("data-currentCurrencySymbol"); if (null == a || null == b) $("#slider").slider("option", "values", [d, e]), PriceRangeFilterManager.sliderSelectedFromValue = d, PriceRangeFilterManager.sliderSelectedToValue = e, $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(c + new Number(d).formatMoney(0,',','.')), $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(c + new Number(e).formatMoney(0,',','.')); null == a && null != b && ($("#slider").slider("option", "values", [d, b]), PriceRangeFilterManager.sliderSelectedFromValue = d, PriceRangeFilterManager.sliderSelectedToValue = b, $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(c + new Number(d).formatMoney(0,',','.')), $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(c + new Number(b).formatMoney(0,',','.'))); null != a && null == b && ($("#slider").slider("option", "values", [a, e]), PriceRangeFilterManager.sliderSelectedFromValue = a, PriceRangeFilterManager.sliderSelectedToValue = e, $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(c + new Number(a).formatMoney(0,',','.')), $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(c + new Number(e).formatMoney(0,',','.'))); null != a && null != b && ($("#slider").slider("option", "values", [a, b]), PriceRangeFilterManager.sliderSelectedFromValue = a, PriceRangeFilterManager.sliderSelectedToValue = b, $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(c + new Number(a).formatMoney(0,',','.')), $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(c + new Number(b).formatMoney(0,',','.'))); c = $(".priceRangeFilterPanel7Spikes .title a.clearPriceRangeFilter"); a == d && b == e || null == a && null == b ? c.hide() : c.show() } function sliderSlide(a, b) { var d = $(".priceRangeFilterPanel7Spikes").attr("data-currentCurrencySymbol"), e = b.values[0], c = b.values[1]; $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(d + new Number(e).formatMoney(0,',','.')); $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(d + new Number(c).formatMoney(0,',','.')) } function sliderStopped(a, b) { var d = parseFloat($("#slider").attr("data-sliderMinValue")), e = parseFloat($("#slider").attr("data-sliderMaxValue")), c = b.values[0], g = b.values[1]; PriceRangeFilterManager.sliderSelectedFromValue = c; PriceRangeFilterManager.sliderSelectedToValue = g; (new FiltersManager).requestProductsForSelectedFilters($(".priceRangeFilterPanel7Spikes")); var h = $(".priceRangeFilterPanel7Spikes .title a.clearPriceRangeFilter"); c == d && g == e ? h.hide() : h.show() } function clearPriceRangeFilter(a) { a.data.priceRangeFilterManager.clearPriceRangeFilterControl(); (new FiltersManager).requestProductsForSelectedFilters($(".priceRangeFilterPanel7Spikes")) } function clearPriceRangeFilterControl() { $(".priceRangeFilterPanel7Spikes .title a.clearPriceRangeFilter").hide(); var a = $("#slider").slider("option", "min"), b = $("#slider").slider("option", "max"); $("#slider").slider("option", { values: [a, b] }); var d = $(".priceRangeFilterPanel7Spikes").attr("data-currentCurrencySymbol"); $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMinPrice").html(d + new Number(a).formatMoney(0,',','.')); $(".priceRangeFilterPanel7Spikes .priceRangeCurrentPricesPanel .currentMaxPrice").html(d + new Number(b).formatMoney(0,',','.')); PriceRangeFilterManager.sliderSelectedFromValue = a; PriceRangeFilterManager.sliderSelectedToValue = b } function determineIfPriceRangeHasBeenSelected() { var a = $("#slider").slider("option", "min"), b = $("#slider").slider("option", "max"), d = $("#slider").slider("option", "values"); return d[0] != a || d[1] != b ? !0 : !1 };