@using Telerik.Web.Mvc.UI
@using Nop.Admin.Controllers

@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
    //page title
    ViewBag.Title = "Kiểm kê tồn kho";
}

@model Nop.Admin.Models.Aero87.WarehouseCountSearch

<div class="section-header">
    <div class="title">
        Kiểm kê tồn kho
    </div>
    <div class="options">
        
    </div>
</div>

<table width="100%">
       
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.StoreId):
            </td>
            <td class="adminData">
                @Html.DropDownList("StoreId", Model.Stores)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ToEndDate):
            </td>
            <td class="adminData">
                @Html.Telerik().DatePickerFor(model => Model.ToEndDate)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ProductCode):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => Model.ProductCode)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.QtyFilter):
            </td>
            <td class="adminData">
                @Html.DropDownListForEnum(model => Model.QtyFilter,typeof(Nop.Admin.Models.Aero87.QtyFilter), new DropDownItem { Text = "---Tất cả---" })
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.OrderByAge):
            </td>
            <td class="adminData">
                @Html.CheckBoxFor(m => m.OrderByAge)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchCategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchCategoryId", Model.AvailableCategories)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.SearchManufacturerId):
            </td>
            <td class="adminData">
                @Html.DropDownList("SearchManufacturerId", Model.AvailableManufacturers)
            </td>
        </tr>

        <tr>
            <td colspan="2">
                <input type="button" id="search-warehousecount" class="t-button" value="Tìm" />
            </td>
        </tr>
</table>
<p>
</p>
<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid<Nop.Core.Domain.Aero87.WarehouseCountResult>()
                    .Name("warehousecount-grid")
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.ProductId)
                        .Filterable(false)
                        .ClientTemplate("<input type='checkbox' name='checkedRecords' value='<#= ProductId #>' class='checkboxGroups'/>")
                        .Title("<input id='mastercheckbox' type='checkbox'/>")
                        .Width(50)
                        .HtmlAttributes(new { style = "text-align:center" })
                        .HeaderHtmlAttributes(new { style = "text-align:center" });
                        columns.Bound(x => x.PictureUrl).Title("").ClientTemplate("<img alt='<#= Id #>' src='<#= PictureUrl #>' />");
                        columns.Bound(x => x.ProductName).Title("Tên sản phẩm");
                        columns.Bound(x => x.ProductCode).Title("Mã sản phẩm");
                        columns.Bound(x => x.Qty).Title("Số lượng").Format("{0:n0}").FooterTemplate(
                                                        "<table><caption><strong>Tính tổng:</strong></caption>" +
                                                         "<tr><td>Tổng lượng: </td><td align='right'><span id=\"aggregator-SumQty-block\"></span></td></tr>" +
                                                         (ViewBag.IsAd?"<tr><td>Tổng trị: </td><td align='right'><span id=\"aggregator-SumCostAmount-block\"></span></td></tr>":"")
                                                         + "</table>"
                            );
                        
                        if (ViewBag.IsAd)
                        {
                            columns.Bound(x => x.CostPrice).Title("Đơn giá vốn").Format("{0:n0}");
                            columns.Bound(x => x.Price).Title("Giá bán").Format("{0:n0}");
                            columns.Bound(x => x.DiscountPercent).Title("% Discount").Format("{0:n0}");
                            columns.Bound(x => x.CurrentPrice).Title("Giá bán HT").Format("{0:n0}");
                            columns.Bound(x => x.CurrentMargin).Title("% Margin HT").Format("{0:n0}");
                            columns.Bound(x => x.CostAmount).Title("Giá vốn").Format("{0:n0}");
                        }
                        columns.Bound(x => x.Age).Title("Tuổi (Ngày)");
                    })
                    .DetailView(m => m.ClientTemplate(
                        Html.Telerik().Grid<Nop.Core.Domain.Aero87.WarehouseCountLineResult>()
                        .Name("orderdetail-grid<#= ProductId #>")
                        .Columns(columns =>
                            {
                                columns.Bound(si => si.Barcode).Title("Mã vạch");
                                columns.Bound(si => si.AttributeDesc).Title("Thuộc tính");
                                columns.Bound(si => si.Qty).Title("Số lượng").Format("{0:n0}");
                                if (ViewBag.IsAd)
                                {
                                    columns.Bound(si => si.CostPrice).Title("Đơn giá vốn").Format("{0:n0}");
                                    columns.Bound(si => si.CostAmount).Title("Giá vốn").Format("{0:n0}");
                                }
                            })
                        .DataBinding(dataBinding => dataBinding.Ajax()
                                 .Select("WarehouseCountGridDetail", "Aero87", new
                                 {
                                     id = "<#= ProductId #>"
                                 })).ClientEvents(events => events.OnDataBinding("onDataBindingDetail"))
                        .ToHtmlString()
                        )
                     )
                     .Pageable(settings => settings.PageSize(gridPageSize).Position(GridPagerPosition.Both))
                     .DataBinding(dataBinding => dataBinding.Ajax().Select("WarehouseCountList", "Aero87"))
                     .ClientEvents(events => events.OnDataBinding("onDataBinding").OnDataBound("onDataBound").OnComplete("onComplete"))
                     .EnableCustomBinding(true))
        </td>
    </tr>
</table>

<script type="text/javascript">

        var selectedIds = [];

        $(document).ready(function () {

            //search button
            $('#search-warehousecount').click(function () {
                //search
                var grid = $('#warehousecount-grid').data('tGrid');
                grid.currentPage = 1; //new search. Set page size to 1
                grid.ajaxRequest();
                //clear selected checkboxes
                $('.checkboxGroups').attr('checked', false).change();
                selectedIds = [];
                return false;
            });

           

            $('#mastercheckbox').click(function () {
                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
            });

            //wire up checkboxes. 
            $('#warehousecount-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                var $check = $(this);
                if ($check.is(":checked") == true) {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked == -1) {
                        //add id to selectedIds.  
                        selectedIds.push($check.val());
                    }
                }
                else {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked > -1) {
                        //remove id from selectedIds.  
                        selectedIds = $.grep(selectedIds, function (item, index) {
                            return item != $check.val();
                        });
                    }
                }
                updateMasterCheckbox();
            });
        });

        function onDataBinding(e) {
            var searchModel = {
                ToEndDate: $('#@Html.FieldIdFor(model => model.ToEndDate)').val(),
                StoreId: $('#@Html.FieldIdFor(model => model.StoreId)').val(),
                ProductCode: $('#@Html.FieldIdFor(model => model.ProductCode)').val(),
                SearchCategoryId: $('#@Html.FieldIdFor(model => model.SearchCategoryId)').val(),
                SearchManufacturerId: $('#@Html.FieldIdFor(model => model.SearchManufacturerId)').val(),
                QtyFilter: $('#@Html.FieldIdFor(model => model.QtyFilter)').val(),
                OrderByAge: $('#@Html.FieldIdFor(model => model.OrderByAge)').is(':checked')
            };
            e.data = searchModel;
        }

        function onDataBindingDetail(e) {
            var searchModel = {
                ToEndDate: $('#@Html.FieldIdFor(model => model.ToEndDate)').val(),
                StoreId: $('#@Html.FieldIdFor(model => model.StoreId)').val()
            };
            e.data = searchModel;
        }

        var aggs = null;

        function onDataBound(e) {
            $('#warehousecount-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                var currentId = $(this).val();
                var checked = jQuery.inArray(currentId, selectedIds);
                //set checked based on if current checkbox's value is in selectedIds.  
                $(this).attr('checked', checked > -1);
            });

            updateMasterCheckbox();

            //Update Agg
            for (var key in aggs) {
                $('#aggregator-SumQty-block').text(aggs['SumQty']);
                $('#aggregator-SumCostAmount-block').text(aggs['SumCostAmount']);
            }
        }

        function onComplete(e) {
            var result = e.response;
            
            if (result) {

                if (!$('#@Html.FieldIdFor(model => model.OrderByAge)').is(':checked'))
                {
                    $(result.data).each(function (e, t) {
                        t.Age = '-';
                    });
                }

                aggs = e.response["aggregates"];
            }
        }

        function updateMasterCheckbox() {
            var numChkBoxes = $('#warehousecount-grid input[type=checkbox][id!=mastercheckbox]').length;
            var numChkBoxesChecked = $('#warehousecount-grid input[type=checkbox][checked][id!=mastercheckbox]').length;
            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
        }
    </script>  