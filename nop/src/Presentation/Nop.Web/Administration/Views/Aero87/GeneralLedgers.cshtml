@using Telerik.Web.Mvc.UI
@using Nop.Admin.Controllers

@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
    
    //page title
    ViewBag.Title = "Nhật ký chung";
}

@model Nop.Admin.Models.Aero87.GeneralLedgerSearch

<div class="section-header">
    <div class="title">
        Nhật ký chung
    </div>
    <div class="options">
        <a href="@Url.Action("EditGeneralLedger")" class="t-button">Tạo mới</a>
    </div>
</div>

<table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.FromDate):
            </td>
            <td class="adminData">
                @Html.Telerik().DatePickerFor(model => Model.FromDate)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ToDate):
            </td>
            <td class="adminData">
                @Html.Telerik().DatePickerFor(model => Model.ToDate)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.DocType):
            </td>
            <td class="adminData">
                @Html.DropDownListForEnum(model => Model.DocType,typeof(Nop.Core.Domain.Aero87.DocType), new DropDownItem { Text = "---Tất cả---" })
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.DocNo):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => Model.DocNo)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AcctCode):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => Model.AcctCode)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ObjCode):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => Model.ObjCode)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ObjName):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => Model.ObjName)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="button" id="search-generalledgers" class="t-button" value="Tìm" />
            </td>
        </tr>
</table>
<p>
</p>
<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid<Nop.Core.Domain.Aero87.GeneralLedgerResult>()
                    .Name("generalledgers-grid")
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Id)
                        .Filterable(false)
                        .ClientTemplate("<input type='checkbox' name='checkedRecords' value='<#= Id #>' class='checkboxGroups'/>")
                        .Title("<input id='mastercheckbox' type='checkbox'/>")
                        .Width(50)
                        .HtmlAttributes(new { style = "text-align:center" })
                        .HeaderHtmlAttributes(new { style = "text-align:center" });
                        columns.Bound(x => x.DocNo).Title("Số CT");
                        columns.Bound(x => x.TypeName).Title("Loại CT");
                        columns.Bound(x => x.DocDate).Width(150).Title("Ngày CT");
                        columns.Bound(x => x.Desc).Title("Diễn giải");
                        columns.Bound(x => x.CreatedDate).Width(150).Title("Ngày tạo");
                    })
                    .DetailView(m => m.ClientTemplate(
                        Html.Telerik().Grid<Nop.Core.Domain.Aero87.GeneralLedgerLineResult>()
                        .Name("orderdetail-grid<#= Id #>")
                        .Columns(columns =>
                            {
                                columns.Bound(si => si.LineId).Title("#");
                                columns.Bound(si => si.AcctCode).Title("Mã tài khoản");
                                columns.Bound(si => si.AcctName).Title("Tên tài khoản");
                                columns.Bound(si => si.ObjCode).Title("Mã Đối tượng");
                                columns.Bound(si => si.ObjName).Title("Tên Đối tượng");
                                columns.Bound(si => si.Debit).Format("{0:N0}").Title("Nợ");
                                columns.Bound(si => si.Credit).Format("{0:N0}").Title("Có");
                                columns.Bound(si => si.Desc).Title("Diễn giải");
                            })
                        .DataBinding(dataBinding => dataBinding.Ajax()
                                    .Select("GeneralLedgerGridDetail", "Aero87", new
                                    {
                                        id = "<#= Id #>"
                                    }))
                        .ToHtmlString()
                        )
                        )
                     .Pageable(settings => settings.PageSize(gridPageSize).Position(GridPagerPosition.Both))
                     .DataBinding(dataBinding => dataBinding.Ajax().Select("GeneralLedgersList", "Aero87"))
                     .ClientEvents(events => events.OnDataBinding("onDataBinding").OnDataBound("onDataBound").OnComplete("onComplete"))
                     .EnableCustomBinding(true))
        </td>
    </tr>
</table>

<script type="text/javascript">

        var selectedIds = [];

        $(document).ready(function () {

            //search button
            $('#search-generalledgers').click(function () {
                //search
                var grid = $('#generalledgers-grid').data('tGrid');
                grid.currentPage = 1; //new search. Set page size to 1
                grid.ajaxRequest();
                //clear selected checkboxes
                $('.checkboxGroups').attr('checked', false).change();
                selectedIds = [];
                return false;
            });

           

            $('#mastercheckbox').click(function () {
                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
            });

            //wire up checkboxes. 
            $('#generalledgers-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                var $check = $(this);
                if ($check.is(":checked") == true) {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked == -1) {
                        //add id to selectedIds.  
                        selectedIds.push($check.val());
                    }
                }
                else {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked > -1) {
                        //remove id from selectedIds.  
                        selectedIds = $.grep(selectedIds, function (item, index) {
                            return item != $check.val();
                        });
                    }
                }
                updateMasterCheckbox();
            });
        });

        function onDataBinding(e) {
            var searchModel = {
                FromDate: $('#@Html.FieldIdFor(model => model.FromDate)').val(),
                ToDate: $('#@Html.FieldIdFor(model => model.ToDate)').val(),
                DocNo: $('#@Html.FieldIdFor(model => model.DocNo)').val(),
                DocType: $('#@Html.FieldIdFor(model => model.DocType)').val(),
                AcctCode: $('#@Html.FieldIdFor(model => model.AcctCode)').val(),
                ObjCode: $('#@Html.FieldIdFor(model => model.ObjCode)').val(),
                ObjName: $('#@Html.FieldIdFor(model => model.ObjName)').val()
            };
            e.data = searchModel;
        }

        var aggs = null;

        function onDataBound(e) {
            $('#generalledgers-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                var currentId = $(this).val();
                var checked = jQuery.inArray(currentId, selectedIds);
                //set checked based on if current checkbox's value is in selectedIds.  
                $(this).attr('checked', checked > -1);
            });

            updateMasterCheckbox();

            //Update Agg
            //for (var key in aggs) {
            //}
        }

        function onComplete(e) {
            var result = e.response;
            if (result) {
                aggs = e.response["aggregates"];
            }
        }

        function updateMasterCheckbox() {
            var numChkBoxes = $('#generalledgers-grid input[type=checkbox][id!=mastercheckbox]').length;
            var numChkBoxesChecked = $('#generalledgers-grid input[type=checkbox][checked][id!=mastercheckbox]').length;
            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
        }
    </script>  