@using Telerik.Web.Mvc.UI

@{
    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
    
    //page title
    ViewBag.Title = "Điều chỉnh kho";
}
@model Nop.Core.Domain.Aero87.InventoryAdjResult


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "inventoryadjs-form" }))
{

<div class="section-header">
    <div class="title">
        Điều chỉnh kho
    </div>
    <div class="options">
        <input type="submit" name="save" class="t-button" value="Lưu" />
    </div>
</div>
@Html.HiddenFor(m => m.Id);
@Html.ValidationSummary(false)
<table width="100%">
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.AdjNo):
        </td>
        <td class="adminData">
            @Html.TextBoxFor(model => model.AdjNo,new {disabled = "disabled"})
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.AdjDate):
        </td>
        <td class="adminData">
            @Html.EditorFor(m => m.AdjDate)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.Desc):
        </td>
        <td class="adminData">
            @Html.TextAreaFor(m => m.Desc)
        </td>
    </tr>

    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.StoreId):
        </td>
        <td class="adminData">
            @Html.DropDownList("StoreId", Model.Stores)
        </td>
    </tr>

    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.DebitAcctId):
        </td>
        <td class="adminData">
            @(Html.Telerik().ComboBox()
                        .Name("DebitAcctId")
                        .Filterable(m => m.FilterMode(AutoCompleteFilterMode.StartsWith))
                        .DropDownHtmlAttributes( new { style = "width:200px; white-space:nowrap;" })
                        .HtmlAttributes( new { style = "width:200px; white-space:nowrap;" })
                        .AutoFill(true)
                        .DataBinding(m => m.Ajax().Cache(true).Select("AcctAjax","Aero87")))
        </td>
    </tr>

    <tr>
        <td class="adminTitle">
            @Html.NopLabelFor(model => model.ObjId):
        </td>
        <td class="adminData">
            @(Html.Telerik().ComboBox()
                        .Name("ObjId")
                        .Filterable(m => m.FilterMode(AutoCompleteFilterMode.StartsWith))
                        .DropDownHtmlAttributes( new { style = "width:200px; white-space:nowrap;" })
                        .HtmlAttributes( new { style = "width:200px; white-space:nowrap;" })
                        .AutoFill(true)
                        .DataBinding(m => m.Ajax().Cache(true).Select("ObjAjax","Aero87")))
        </td>
    </tr>

</table>
<p>
</p>
<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid<Nop.Core.Domain.Aero87.InventoryAdjLineResult>()
                    .Name("inventoryadjs-grid")
                    .Editable(m => m.Mode(GridEditMode.InLine).InsertRowPosition(GridInsertRowPosition.Bottom))
                    .DataKeys(m => m.Add(k => k.Id))    
                    .ToolBar(m => m.Insert().Text("Thêm"))                
                    .Columns(columns =>
                    {
                        columns.Bound(si => si.Seq).Width(20).Title("#").ReadOnly();
                        columns.Bound(si => si.FullName).Title("Sản phẩm").Width(450).EditorTemplateName("BarcodeCb");
                        columns.Bound(si => si.Qty).Width(100).Title("Số lượng").Format("{0:N0}");
                        columns.Bound(si => si.CostAmount).Width(200).Title("Tổng tiền").Format("{0:N0}");
                        columns.Command(commands =>
                        {
                            commands.Edit().UpdateText("Sửa").CancelText("Hủy").Text("Sửa").InsertText("Thêm");
                        }).Width(200);
                    })
                     .Pageable(settings => settings.PageSize(gridPageSize).Position(GridPagerPosition.Both))
                     .DataBinding(dataBinding => 
                         dataBinding.Ajax()
                         .Select("InventoryAdjGridDetailEdit", "Aero87", new { id = Model.Id})
                         .Update("InventoryAdjGridDetailUpdate", "Aero87", new { id = Model.Id })
                         .Insert("InventoryAdjGridDetailInsert", "Aero87", new { id = Model.Id })
                     )
                     .ClientEvents(events => events.OnDataBinding("onDataBinding").OnDataBound("onDataBound").OnComplete("onComplete"))
                     .EnableCustomBinding(true))
        </td>
    </tr>
</table>

<script type="text/javascript">

        var selectedIds = [];

        $(document).ready(function () {

            //search button
            $('#search-inventoryadjs').click(function () {
                //search
                var grid = $('#inventoryadjs-grid').data('tGrid');
                grid.currentPage = 1; //new search. Set page size to 1
                grid.ajaxRequest();
                //clear selected checkboxes
                $('.checkboxGroups').attr('checked', false).change();
                selectedIds = [];
                return false;
            });

           

            $('#mastercheckbox').click(function () {
                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
            });

            //wire up checkboxes. 
            $('#inventoryadjs-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                var $check = $(this);
                if ($check.is(":checked") == true) {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked == -1) {
                        //add id to selectedIds.  
                        selectedIds.push($check.val());
                    }
                }
                else {
                    var checked = jQuery.inArray($check.val(), selectedIds);
                    if (checked > -1) {
                        //remove id from selectedIds.  
                        selectedIds = $.grep(selectedIds, function (item, index) {
                            return item != $check.val();
                        });
                    }
                }
                updateMasterCheckbox();
            });
        });

        function onDataBinding(e) {
            @*var searchModel = {
                Id: $('#@Html.FieldIdFor(model => model.DocNo)').val()
            };
            e.data = searchModel;*@
        }

        var aggs = null;

        function onDataBound(e) {
            $('#inventoryadjs-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                var currentId = $(this).val();
                var checked = jQuery.inArray(currentId, selectedIds);
                //set checked based on if current checkbox's value is in selectedIds.  
                $(this).attr('checked', checked > -1);
            });

            updateMasterCheckbox();

            //Update Agg
            //for (var key in aggs) {
            //}
        }

        function onComplete(e) {
            var result = e.response;
            if (result) {
                aggs = e.response["aggregates"];
            }
        }

        function updateMasterCheckbox() {
            var numChkBoxes = $('#inventoryadjs-grid input[type=checkbox][id!=mastercheckbox]').length;
            var numChkBoxesChecked = $('#inventoryadjs-grid input[type=checkbox][checked][id!=mastercheckbox]').length;
            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
        }
    </script>
    
}  